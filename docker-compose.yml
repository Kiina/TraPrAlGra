version: '3.3'

services:
  traefik:
    image: traefik:v2.1.2
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik
      - proxy
    ports:
      - 80:80
      - 443:443
      - 8082:8082
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
      - ./acme.json:/acme.json
      - ./config.yml:/config.yml:ro
    labels:
      - 'traefik.enable=true'

      # Dashboard
      - 'traefik.http.routers.traefik.rule=Host(`dashboard.yourdomain.tld`)'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.tls.certresolver=leresolver'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.middlewares=authtraefik'
      - 'traefik.http.middlewares.authtraefik.basicauth.users=<user>:<password>'
      - 'traefik.http.middlewares.default.chain.middlewares=compress-all@file'

      # Global redirect to https
      - 'traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)'
      - 'traefik.http.routers.http-catchall.entrypoints=web'
      - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'

      # Middleware redirect
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'

      # Metrics
      - 'traefik.http.services.traefik.loadbalancer.server.port=8082'

  prometheus:
    image: prom/prometheus:v2.15.2
    restart: unless-stopped
    container_name: prometheus
    expose:
      - 9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - traefik
    labels:
      org.label-schema.group: 'monitoring'

  alertmanager:
    image: prom/alertmanager:v0.20.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - traefik
    labels:
      org.label-schema.group: 'monitoring'

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - traefik
    labels:
      org.label-schema.group: 'monitoring'

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - traefik
    labels:
      org.label-schema.group: 'monitoring'

  pushgateway:
    image: prom/pushgateway:v1.0.1
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - traefik
    labels:
      org.label-schema.group: 'monitoring'

  grafana:
    image: grafana/grafana:v6.5.3
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - traefik
      - proxy
    user: '104'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.monitor-grafana.rule=Host(`monitor.yourdomain.tld`)'
      - 'traefik.http.routers.monitor-grafana.tls.certresolver=leresolver'
      - 'traefik.http.routers.monitor-grafana.entrypoints=websecure'
      - 'traefik.http.routers.monitor-grafana.middlewares=secure-compress@file'
      - 'traefik.http.middlewares.default.chain.middlewares=compress-all@file'
      - 'traefik.http.services.monitor-grafana.loadbalancer.server.port=3000'
      - 'traefik.docker.network=proxy'
      - 'org.label-schema.group=monitoring'

networks:
  traefik:
  proxy:
    external: true

volumes:
  prometheus_data: {}
  grafana_data: {}
